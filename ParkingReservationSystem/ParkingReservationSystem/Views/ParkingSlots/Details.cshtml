@model ParkingReservationSystem.Models.ParkingSlot
@{
    ViewData["Title"] = "Chi tiết chỗ đỗ xe";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <!-- Modern Header Section -->
    <div class="row align-items-center mb-4">
        <div class="col">
            <div class="header-content">
                <div class="d-flex align-items-center">
                    <div class="icon-wrapper me-3">
                        <i class="fas fa-info-circle"></i>
                    </div>
                    <div>
                        <h1 class="page-title mb-0">Chi tiết chỗ đỗ xe</h1>
                        <p class="page-subtitle mb-0">Thông tin chi tiết của chỗ đỗ xe: <span class="highlight">@Model.SlotCode</span></p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-auto">
            <div class="action-buttons d-flex gap-2">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-modern">
                    <i class="fas fa-edit me-2"></i>Chỉnh sửa
                </a>
                <a asp-action="Index" class="btn btn-secondary btn-modern">
                    <i class="fas fa-arrow-left me-2"></i>Quay lại
                </a>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <!-- Main Information Card -->
        <div class="col-lg-8">
            <div class="modern-card main-card">
                <div class="card-header-modern">
                    <div class="d-flex align-items-center">
                        <div class="header-icon primary">
                            <i class="fas fa-parking"></i>
                        </div>
                        <div>
                            <h4 class="mb-0">Thông tin cơ bản</h4>
                            <small class="text-muted">Thông tin chi tiết về chỗ đỗ xe</small>
                        </div>
                    </div>
                </div>
                
                <div class="card-body p-4">
                    <div class="row g-4">
                        <!-- Slot Code -->
                        <div class="col-md-6">
                            <div class="info-card slot-code">
                                <div class="info-header">
                                    <div class="info-icon">
                                        <i class="fas fa-barcode"></i>
                                    </div>
                                    <div class="info-content">
                                        <span class="label">MÃ CHỖ ĐỖ XE</span>
                                        <div class="info-value">
                                            <span class="code-badge">@Model.SlotCode</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Floor -->
                        <div class="col-md-6">
                            <div class="info-card floor-info">
                                <div class="info-header">
                                    <div class="info-icon">
                                        <i class="fas fa-layer-group"></i>
                                    </div>
                                    <div class="info-content">
                                        <span class="label">TẦNG</span>
                                        <div class="info-value">
                                            <span class="floor-badge">Tầng @Model.Floor</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Status -->
                        <div class="col-12">
                            <div class="status-display">
                                <div class="status-header">
                                    <div class="status-icon-wrapper">
                                        <i class="fas fa-toggle-on"></i>
                                    </div>
                                    <div>
                                        <span class="label">TRẠNG THÁI HIỆN TẠI</span>
                                        <small class="d-block text-muted mt-1">Tình trạng sử dụng của chỗ đỗ xe</small>
                                    </div>
                                </div>
                                <div class="status-content">
                                    @if (Model.IsAvailable)
                                    {
                                        <div class="status-available-card">
                                            <div class="status-badge-icon available">
                                                <i class="fas fa-check-circle"></i>
                                            </div>
                                            <div class="status-text">
                                                <h5 class="status-title">Có sẵn</h5>
                                                <p class="status-desc">Chỗ đỗ xe này có thể được đặt trước và sử dụng</p>
                                            </div>
                                            <div class="status-indicator available-pulse"></div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="status-occupied-card">
                                            <div class="status-badge-icon occupied">
                                                <i class="fas fa-times-circle"></i>
                                            </div>
                                            <div class="status-text">
                                                <h5 class="status-title">Đã được sử dụng</h5>
                                                <p class="status-desc">Chỗ đỗ xe này hiện không khả dụng</p>
                                            </div>
                                            <div class="status-indicator occupied-pulse"></div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Actions Card -->
            <div class="modern-card actions-card mb-4">
                <div class="card-header-modern">
                    <div class="d-flex align-items-center">
                        <div class="header-icon secondary">
                            <i class="fas fa-tools"></i>
                        </div>
                        <div>
                            <h5 class="mb-0">Thao tác nhanh</h5>
                            <small class="text-muted">Các hành động có thể thực hiện</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="action-buttons-grid">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="action-btn edit-btn">
                            <div class="btn-icon">
                                <i class="fas fa-edit"></i>
                            </div>
                            <div class="btn-content">
                                <span class="btn-title">Chỉnh sửa</span>
                                <small class="btn-subtitle">Cập nhật thông tin</small>
                            </div>
                        </a>
                        <button type="button" class="action-btn delete-btn" data-bs-toggle="modal" data-bs-target="#deleteModal">
                            <div class="btn-icon">
                                <i class="fas fa-trash"></i>
                            </div>
                            <div class="btn-content">
                                <span class="btn-title">Xóa</span>
                                <small class="btn-subtitle">Xóa vĩnh viễn</small>
                            </div>
                        </button>
                        <a asp-action="Index" class="action-btn list-btn">
                            <div class="btn-icon">
                                <i class="fas fa-list"></i>
                            </div>
                            <div class="btn-content">
                                <span class="btn-title">Danh sách</span>
                                <small class="btn-subtitle">Xem tất cả</small>
                            </div>
                        </a>
                    </div>
                </div>
            </div>

            <!-- Statistics Card -->
            <div class="modern-card stats-card">
                <div class="card-header-modern">
                    <div class="d-flex align-items-center">
                        <div class="header-icon info">
                            <i class="fas fa-chart-bar"></i>
                        </div>
                        <div>
                            <h5 class="mb-0">Thông tin thống kê</h5>
                            <small class="text-muted">Chi tiết kỹ thuật</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-icon">
                                <i class="fas fa-hashtag"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-label">ID</div>
                                <div class="stat-value">#@Model.Id</div>
                            </div>
                        </div>
                        
                        <div class="stat-item">
                            <div class="stat-icon location">
                                <i class="fas fa-map-marker-alt"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-label">Vị trí</div>
                                <div class="stat-value">@Model.SlotCode - T@Model.Floor</div>
                            </div>
                        </div>

                        <div class="stat-item full-width">
                            <div class="stat-icon status">
                                <i class="fas fa-calendar-alt"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-label">Trạng thái hiện tại</div>
                                <div class="stat-value">
                                    @if (Model.IsAvailable)
                                    {
                                        <span class="status-badge available">
                                            <i class="fas fa-check-circle me-1"></i>
                                            Sẵn sàng sử dụng
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="status-badge occupied">
                                            <i class="fas fa-times-circle me-1"></i>
                                            Đang được sử dụng
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modern-modal">
            <div class="modal-header-modern">
                <div class="modal-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <div>
                    <h4 class="modal-title">Xác nhận xóa</h4>
                    <small class="text-muted">Hành động này không thể hoàn tác</small>
                </div>
            </div>
            <div class="modal-body-modern">
                <div class="warning-content">
                    <div class="warning-illustration">
                        <i class="fas fa-trash-alt"></i>
                    </div>
                    <h5>Bạn có chắc chắn muốn xóa chỗ đỗ xe này?</h5>
                    <div class="slot-preview">
                        <div class="preview-item">
                            <span class="preview-label">
                                <i class="fas fa-barcode me-2"></i>Mã:
                            </span>
                            <span class="preview-value">@Model.SlotCode</span>
                        </div>
                        <div class="preview-item">
                            <span class="preview-label">
                                <i class="fas fa-layer-group me-2"></i>Tầng:
                            </span>
                            <span class="preview-value">@Model.Floor</span>
                        </div>
                        <div class="preview-item">
                            <span class="preview-label">
                                <i class="fas fa-info-circle me-2"></i>Trạng thái:
                            </span>
                            <span class="preview-value">@(Model.IsAvailable ? "Có sẵn" : "Đã sử dụng")</span>
                        </div>
                    </div>
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Cảnh báo:</strong> Hành động này sẽ xóa vĩnh viễn và không thể khôi phục.
                    </div>
                </div>
            </div>
            <div class="modal-footer-modern">
                <button type="button" class="btn btn-light-modern" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Hủy bỏ
                </button>
                <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger-modern">
                    <i class="fas fa-trash me-2"></i>Xóa ngay
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Modern Styles -->
<style>
    :root {
        --primary-color: #0066cc;
        --primary-light: #e6f3ff;
        --primary-gradient: linear-gradient(135deg, #0066cc 0%, #004499 100%);
        
        --success-color: #28a745;
        --success-light: #d4edda;
        --success-gradient: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        
        --danger-color: #dc3545;
        --danger-light: #f8d7da;
        --danger-gradient: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        
        --warning-color: #ffc107;
        --warning-light: #fff3cd;
        --warning-gradient: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);
        
        --info-color: #17a2b8;
        --info-light: #d1ecf1;
        --info-gradient: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
        
        --secondary-color: #6c757d;
        --secondary-light: #e9ecef;
        --secondary-gradient: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        
        --light-bg: #f8f9fa;
        --white: #ffffff;
        --gray-100: #f8f9fa;
        --gray-200: #e9ecef;
        --gray-300: #dee2e6;
        --gray-400: #ced4da;
        --gray-500: #adb5bd;
        --gray-600: #6c757d;
        --gray-700: #495057;
        --gray-800: #343a40;
        --gray-900: #212529;
        
        --shadow-sm: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        --shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        --shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
        --shadow-modern: 0 4px 20px rgba(0, 0, 0, 0.1);
        --border-radius: 12px;
        --border-radius-lg: 16px;
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    body {
        background: var(--light-bg);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        color: var(--gray-700);
        line-height: 1.6;
    }

    .container-fluid {
        max-width: 1400px;
        margin: 0 auto;
    }

    /* Header Styles */
    .header-content {
        padding: 2rem 0;
    }

    .icon-wrapper {
        width: 60px;
        height: 60px;
        background: var(--white);
        border: 2px solid var(--gray-200);
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        color: var(--primary-color);
        box-shadow: var(--shadow);
        transition: var(--transition);
    }

    .icon-wrapper:hover {
        transform: scale(1.05);
        box-shadow: var(--shadow-lg);
        border-color: var(--primary-color);
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--gray-800);
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: var(--gray-600);
        font-size: 1.1rem;
        margin: 0;
    }

    .highlight {
        background: var(--warning-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-weight: 700;
        position: relative;
    }

    /* Button Styles */
    .btn-modern {
        border-radius: var(--border-radius);
        padding: 12px 24px;
        font-weight: 600;
        font-size: 0.95rem;
        border: none;
        transition: var(--transition);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        box-shadow: var(--shadow-sm);
    }

    .btn-primary.btn-modern {
        background: var(--primary-gradient);
        color: white;
    }

    .btn-primary.btn-modern:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
        color: white;
    }

    .btn-secondary.btn-modern {
        background: var(--white);
        color: var(--gray-700);
        border: 2px solid var(--gray-300);
    }

    .btn-secondary.btn-modern:hover {
        background: var(--gray-100);
        border-color: var(--gray-400);
        transform: translateY(-2px);
        color: var(--gray-800);
    }

    /* Card Styles */
    .modern-card {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-modern);
        overflow: hidden;
        border: 1px solid var(--gray-200);
        transition: var(--transition);
        animation: slideUp 0.6s ease-out;
    }

    .modern-card:hover {
        box-shadow: var(--shadow-lg);
        transform: translateY(-2px);
    }

    .main-card {
        animation-delay: 0.1s;
    }

    .actions-card {
        animation-delay: 0.3s;
    }

    .stats-card {
        animation-delay: 0.5s;
    }

    .card-header-modern {
        background: linear-gradient(135deg, var(--gray-50) 0%, var(--white) 100%);
        border-bottom: 2px solid var(--gray-200);
        padding: 1.5rem;
    }

    .header-icon {
        width: 50px;
        height: 50px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 20px;
        color: white;
        transition: var(--transition);
    }

    .header-icon.primary {
        background: var(--primary-gradient);
    }

    .header-icon.secondary {
        background: var(--secondary-gradient);
    }

    .header-icon.info {
        background: var(--info-gradient);
    }

    .header-icon:hover {
        transform: scale(1.1) rotate(5deg);
    }

    /* Info Card Styles */
    .info-card {
        background: var(--white);
        border: 2px solid var(--gray-200);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        height: 100%;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
    }

    .info-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
        border-color: var(--primary-color);
    }

    .info-card.slot-code {
        background: linear-gradient(135deg, var(--primary-light) 0%, var(--white) 100%);
        border-color: var(--primary-color);
    }

    .info-card.floor-info {
        background: linear-gradient(135deg, var(--info-light) 0%, var(--white) 100%);
        border-color: var(--info-color);
    }

    .info-header {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
    }

    .info-icon {
        width: 50px;
        height: 50px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        color: white;
        flex-shrink: 0;
    }

    .slot-code .info-icon {
        background: var(--primary-gradient);
    }

    .floor-info .info-icon {
        background: var(--info-gradient);
    }

    .info-content {
        flex: 1;
    }

    .label {
        color: var(--gray-600);
        font-size: 0.875rem;
        font-weight: 600;
        letter-spacing: 0.05em;
        margin-bottom: 0.75rem;
        display: block;
    }

    .info-value {
        margin-top: 0.75rem;
    }

    .code-badge,
    .floor-badge {
        display: inline-block;
        padding: 10px 20px;
        border-radius: 25px;
        font-weight: 700;
        font-size: 1.1rem;
        color: white;
        text-shadow: 0 1px 2px rgba(0,0,0,0.1);
    }

    .code-badge {
        background: var(--primary-gradient);
    }

    .floor-badge {
        background: var(--info-gradient);
    }

    /* Status Display */
    .status-display {
        background: var(--white);
        border: 2px solid var(--gray-200);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        transition: var(--transition);
    }

    .status-display:hover {
        border-color: var(--gray-400);
        box-shadow: var(--shadow);
    }

    .status-header {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .status-icon-wrapper {
        width: 50px;
        height: 50px;
        background: var(--secondary-gradient);
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 20px;
        flex-shrink: 0;
    }

    .status-available-card,
    .status-occupied-card {
        display: flex;
        align-items: center;
        padding: 1.5rem;
        border-radius: var(--border-radius);
        position: relative;
        transition: var(--transition);
    }

    .status-available-card {
        background: linear-gradient(135deg, var(--success-light) 0%, var(--white) 100%);
        border: 2px solid var(--success-color);
    }

    .status-occupied-card {
        background: linear-gradient(135deg, var(--danger-light) 0%, var(--white) 100%);
        border: 2px solid var(--danger-color);
    }

    .status-badge-icon {
        font-size: 3rem;
        margin-right: 1.5rem;
        animation: pulse 2s infinite;
    }

    .status-badge-icon.available {
        color: var(--success-color);
    }

    .status-badge-icon.occupied {
        color: var(--danger-color);
    }

    .status-text h5 {
        color: var(--gray-800);
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .status-desc {
        color: var(--gray-600);
        margin: 0;
        font-size: 0.95rem;
    }

    .status-indicator {
        position: absolute;
        right: 1.5rem;
        top: 50%;
        transform: translateY(-50%);
        width: 12px;
        height: 12px;
        border-radius: 50%;
        animation: ping 2s infinite;
    }

    .available-pulse {
        background: var(--success-color);
    }

    .occupied-pulse {
        background: var(--danger-color);
    }

    /* Action Buttons */
    .action-buttons-grid {
        display: grid;
        gap: 1rem;
    }

    .action-btn {
        display: flex;
        align-items: center;
        padding: 1rem;
        border: 2px solid var(--gray-200);
        border-radius: var(--border-radius);
        text-decoration: none;
        color: var(--gray-700);
        font-weight: 600;
        transition: var(--transition);
        background: var(--white);
        cursor: pointer;
    }

    .action-btn:hover {
        color: var(--gray-800);
        transform: translateX(5px);
        box-shadow: var(--shadow);
    }

    .edit-btn:hover {
        background: linear-gradient(135deg, var(--warning-light) 0%, var(--white) 100%);
        border-color: var(--warning-color);
    }

    .delete-btn:hover {
        background: linear-gradient(135deg, var(--danger-light) 0%, var(--white) 100%);
        border-color: var(--danger-color);
    }

    .list-btn:hover {
        background: linear-gradient(135deg, var(--secondary-light) 0%, var(--white) 100%);
        border-color: var(--secondary-color);
    }

    .btn-icon {
        width: 50px;
        height: 50px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 18px;
        color: white;
        transition: var(--transition);
        flex-shrink: 0;
    }

    .edit-btn .btn-icon {
        background: var(--warning-gradient);
    }

    .delete-btn .btn-icon {
        background: var(--danger-gradient);
    }

    .list-btn .btn-icon {
        background: var(--secondary-gradient);
    }

    .btn-content {
        flex: 1;
        text-align: left;
    }

    .btn-title {
        display: block;
        font-weight: 600;
        font-size: 1rem;
        color: var(--gray-800);
    }

    .btn-subtitle {
        display: block;
        font-size: 0.85rem;
        color: var(--gray-500);
        margin-top: 0.25rem;
    }

    /* Stats Grid */
    .stats-grid {
        display: grid;
        gap: 1rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        padding: 1rem;
        background: var(--white);
        border: 2px solid var(--gray-200);
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

    .stat-item:hover {
        transform: scale(1.02);
        box-shadow: var(--shadow);
        border-color: var(--gray-400);
    }

    .stat-item.full-width {
        grid-column: 1 / -1;
    }

    .stat-icon {
        width: 50px;
        height: 50px;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 18px;
        color: white;
        transition: var(--transition);
        flex-shrink: 0;
    }

    .stat-icon {
        background: var(--primary-gradient);
    }

    .stat-icon.location {
        background: var(--info-gradient);
    }

    .stat-icon.status {
        background: var(--secondary-gradient);
    }

    .stat-content {
        flex: 1;
    }

    .stat-label {
        color: var(--gray-500);
        font-size: 0.875rem;
        font-weight: 500;
        margin-bottom: 0.25rem;
    }

    .stat-value {
        color: var(--gray-800);
        font-weight: 600;
        font-size: 1rem;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
        color: white;
    }

    .status-badge.available {
        background: var(--success-gradient);
    }

    .status-badge.occupied {
        background: var(--danger-gradient);
    }

    /* Modal Styles */
    .modern-modal {
        background: var(--white);
        border-radius: var(--border-radius-lg);
        border: 1px solid var(--gray-300);
        box-shadow: var(--shadow-lg);
    }

    .modal-header-modern {
        background: linear-gradient(135deg, var(--danger-light) 0%, var(--white) 100%);
        border-bottom: 2px solid var(--gray-200);
        padding: 1.5rem;
        border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
        display: flex;
        align-items: center;
    }

    .modal-icon {
        width: 60px;
        height: 60px;
        background: var(--danger-gradient);
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 24px;
        color: white;
        flex-shrink: 0;
    }

    .modal-title {
        margin: 0;
        color: var(--gray-800);
        font-weight: 600;
        font-size: 1.5rem;
    }

    .modal-body-modern {
        padding: 2rem;
    }

    .warning-content {
        text-align: center;
    }

    .warning-illustration {
        width: 100px;
        height: 100px;
        background: linear-gradient(135deg, var(--danger-light) 0%, var(--white) 100%);
        border: 3px solid var(--danger-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem;
        font-size: 36px;
        color: var(--danger-color);
        animation: bounce 2s infinite;
    }

    .warning-content h5 {
        color: var(--gray-800);
        font-weight: 600;
        margin-bottom: 1.5rem;
        font-size: 1.25rem;
    }

    .slot-preview {
        background: var(--gray-100);
        border: 2px solid var(--gray-200);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        text-align: left;
    }

    .preview-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid var(--gray-300);
    }

    .preview-item:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
        border-bottom: none;
    }

    .preview-label {
        color: var(--gray-600);
        font-weight: 500;
        display: flex;
        align-items: center;
    }

    .preview-value {
        color: var(--gray-800);
        font-weight: 600;
        background: var(--primary-gradient);
        color: white;
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 0.875rem;
    }

    .alert {
        padding: 1rem;
        border-radius: var(--border-radius);
        border: none;
        display: flex;
        align-items: center;
        margin: 0;
    }

    .alert-warning {
        background: var(--warning-light);
        color: var(--warning-color);
        border-left: 4px solid var(--warning-color);
    }

    .modal-footer-modern {
        padding: 1.5rem;
        border-top: 2px solid var(--gray-200);
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
        background: var(--gray-50);
    }

    .btn-light-modern {
        background: var(--white);
        border: 2px solid var(--gray-300);
        border-radius: var(--border-radius);
        padding: 12px 24px;
        font-weight: 600;
        color: var(--gray-700);
        transition: var(--transition);
        display: inline-flex;
        align-items: center;
    }

    .btn-light-modern:hover {
        background: var(--gray-100);
        border-color: var(--gray-400);
        transform: translateY(-2px);
        box-shadow: var(--shadow);
        color: var(--gray-800);
    }

    .btn-danger-modern {
        background: var(--danger-gradient);
        border: none;
        border-radius: var(--border-radius);
        padding: 12px 24px;
        font-weight: 600;
        color: white;
        transition: var(--transition);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
    }

    .btn-danger-modern:hover {
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(220, 53, 69, 0.4);
        filter: brightness(110%);
    }

    /* Animations */
    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0%, 100% {
            transform: scale(1);
            opacity: 1;
        }
        50% {
            transform: scale(1.05);
            opacity: 0.8;
        }
    }

    @@keyframes ping {
        0% {
            transform: translateY(-50%) scale(1);
            opacity: 1;
        }
        75%, 100% {
            transform: translateY(-50%) scale(2);
            opacity: 0;
        }
    }

    @@keyframes bounce {
        0%, 20%, 53%, 80%, 100% {
            transform: translateY(0);
        }
        40%, 43% {
            transform: translateY(-10px);
        }
        70% {
            transform: translateY(-5px);
        }
        90% {
            transform: translateY(-2px);
        }
    }

    /* Hover Effects */
    .modern-card:hover .header-icon {
        transform: scale(1.1) rotate(10deg);
    }

    .action-btn:hover .btn-icon {
        transform: scale(1.1) rotate(5deg);
    }

    .stat-item:hover .stat-icon {
        transform: rotate(15deg) scale(1.1);
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .page-title {
            font-size: 2rem;
        }
        
        .icon-wrapper {
            width: 50px;
            height: 50px;
            font-size: 20px;
        }
        
        .stats-grid {
            grid-template-columns: 1fr;
        }
        
        .action-buttons-grid {
            grid-template-columns: 1fr;
        }
        
        .status-available-card,
        .status-occupied-card {
            flex-direction: column;
            text-align: center;
        }
        
        .status-badge-icon {
            margin-right: 0;
            margin-bottom: 1rem;
        }
        
        .info-header {
            flex-direction: column;
            align-items: center;
            text-align: center;
        }
        
        .info-icon {
            margin-bottom: 1rem;
        }
    }

    @@media (max-width: 576px) {
        .header-content {
            padding: 1rem 0;
        }
        
        .page-title {
            font-size: 1.75rem;
        }
        
        .action-buttons {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .btn-modern {
            width: 100%;
            justify-content: center;
        }
        
        .modal-dialog {
            margin: 0.5rem;
        }
        
        .warning-illustration {
            width: 80px;
            height: 80px;
            font-size: 28px;
        }
    }

    /* Loading States */
    .loading {
        opacity: 0.6;
        pointer-events: none;
    }

    .loading::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 20px;
        height: 20px;
        margin: -10px 0 0 -10px;
        border: 2px solid var(--primary-color);
        border-radius: 50%;
        border-top-color: transparent;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Focus States for Accessibility */
    .btn-modern:focus,
    .action-btn:focus {
        outline: 2px solid var(--primary-color);
        outline-offset: 2px;
    }

    .modal-content:focus {
        outline: none;
    }

    /* Print Styles */
    @@media print {
        .action-buttons,
        .modal,
        .btn-modern {
            display: none !important;
        }
        
        .modern-card {
            box-shadow: none;
            border: 1px solid var(--gray-400);
        }
        
        body {
            background: white;
        }
    }
</style>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Enhanced interactive hover effects
            const infoCards = document.querySelectorAll('.info-card');
            infoCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-8px) scale(1.02)';
                    const icon = this.querySelector('.info-icon');
                    if (icon) {
                        icon.style.transform = 'scale(1.1) rotate(10deg)';
                    }
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                    const icon = this.querySelector('.info-icon');
                    if (icon) {
                        icon.style.transform = 'scale(1) rotate(0deg)';
                    }
                });
            });

            // Enhanced stat items animation
            const statItems = document.querySelectorAll('.stat-item');
            statItems.forEach((item, index) => {
                item.addEventListener('mouseenter', function() {
                    const icon = this.querySelector('.stat-icon');
                    icon.style.transform = 'rotate(15deg) scale(1.15)';
                    this.style.transform = 'scale(1.03) translateY(-2px)';
                });
                
                item.addEventListener('mouseleave', function() {
                    const icon = this.querySelector('.stat-icon');
                    icon.style.transform = 'rotate(0deg) scale(1)';
                    this.style.transform = 'scale(1) translateY(0)';
                });

                // Staggered animation on load
                setTimeout(() => {
                    item.style.opacity = '1';
                    item.style.transform = 'translateY(0)';
                }, index * 100);
            });

            // Enhanced action buttons
            const actionBtns = document.querySelectorAll('.action-btn');
            actionBtns.forEach(btn => {
                btn.addEventListener('mouseenter', function() {
                    const icon = this.querySelector('.btn-icon');
                    icon.style.transform = 'scale(1.15) rotate(10deg)';
                    this.style.transform = 'translateX(8px)';
                });
                
                btn.addEventListener('mouseleave', function() {
                    const icon = this.querySelector('.btn-icon');
                    icon.style.transform = 'scale(1) rotate(0deg)';
                    this.style.transform = 'translateX(0)';
                });
            });

            // Modern cards entrance animation
            const cards = document.querySelectorAll('.modern-card');
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                        entry.target.classList.add('animate-in');
                    }
                });
            }, observerOptions);

            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                card.style.animationDelay = `${index * 0.1}s`;
                observer.observe(card);
            });

            // Status indicator pulse animation
            const statusIndicators = document.querySelectorAll('.status-indicator');
            statusIndicators.forEach(indicator => {
                setInterval(() => {
                    indicator.style.animation = 'none';
                    setTimeout(() => {
                        indicator.style.animation = 'ping 2s infinite';
                    }, 10);
                }, 3000);
            });

            // Enhanced modal interactions
            const deleteModal = document.getElementById('deleteModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function() {
                    const warningIcon = this.querySelector('.warning-illustration');
                    if (warningIcon) {
                        warningIcon.style.animation = 'bounce 1s ease-in-out';
                    }
                });

                deleteModal.addEventListener('hidden.bs.modal', function() {
                    const warningIcon = this.querySelector('.warning-illustration');
                    if (warningIcon) {
                        warningIcon.style.animation = 'bounce 2s infinite';
                    }
                });
            }

            // Add ripple effect to buttons
            function createRipple(event) {
                const button = event.currentTarget;
                const circle = document.createElement('span');
                const diameter = Math.max(button.clientWidth, button.clientHeight);
                const radius = diameter / 2;

                circle.style.width = circle.style.height = `${diameter}px`;
                circle.style.left = `${event.clientX - button.offsetLeft - radius}px`;
                circle.style.top = `${event.clientY - button.offsetTop - radius}px`;
                circle.classList.add('ripple');

                const ripple = button.getElementsByClassName('ripple')[0];
                if (ripple) {
                    ripple.remove();
                }

                button.appendChild(circle);
            }

            const buttons = document.querySelectorAll('.btn-modern, .action-btn');
            buttons.forEach(btn => {
                btn.addEventListener('click', createRipple);
            });

            // Add loading state simulation for actions
            const editBtn = document.querySelector('a[asp-action="Edit"]');
            if (editBtn) {
                editBtn.addEventListener('click', function(e) {
                    this.classList.add('loading');
                    this.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang tải...';
                });
            }

            // Smooth scroll to top when back button is clicked
            const backBtn = document.querySelector('a[asp-action="Index"]');
            if (backBtn) {
                backBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                    setTimeout(() => {
                        window.location.href = this.href;
                    }, 300);
                });
            }

            // Add keyboard navigation
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    const modal = document.querySelector('.modal.show');
                    if (modal) {
                        const bsModal = bootstrap.Modal.getInstance(modal);
                        if (bsModal) {
                            bsModal.hide();
                        }
                    }
                }
            });

            // Performance optimization: Debounce resize events
            let resizeTimeout;
            window.addEventListener('resize', function() {
                clearTimeout(resizeTimeout);
                resizeTimeout = setTimeout(function() {
                    // Recalculate animations or layouts if needed
                    cards.forEach(card => {
                        card.style.transform = 'translateY(0)';
                    });
                }, 250);
            });
        });

        // Add CSS for ripple effect
        const style = document.createElement('style');
        style.textContent = `
            .ripple {
                position: absolute;
                border-radius: 50%;
                background-color: rgba(255, 255, 255, 0.4);
                transform: scale(0);
                animation: ripple-animation 0.6s linear;
                pointer-events: none;
            }

            @@keyframes ripple-animation {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }

            .animate-in {
                animation: slideUp 0.6s ease-out forwards;
            }
        `;
        document.head.appendChild(style);
    </script>
}