@model ParkingReservationSystem.Models.ParkingSlot
@{
    ViewData["Title"] = "Xóa chỗ đỗ xe";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <!-- Modern Header Section -->
    <div class="row align-items-center mb-4">
        <div class="col">
            <div class="header-content">
                <div class="d-flex align-items-center">
                    <div class="icon-wrapper danger me-3">
                        <i class="fas fa-trash-alt"></i>
                    </div>
                    <div style="margin-left: 15px">
                        <h1 class="page-title mb-0">Xóa chỗ đỗ xe</h1>
                        <p class="page-subtitle mb-0">Xác nhận xóa chỗ đỗ xe: <span class="highlight-danger">@Model.SlotCode</span></p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-auto">
            <a asp-action="Index" class="btn btn-outline-primary btn-modern">
                <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
            </a>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-xl-8 col-lg-10">
            <!-- Warning Alert -->
            <div class="warning-alert mb-4">
                <div class="warning-content">
                    <div class="warning-icon-large">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="warning-text">
                        <h4>Cảnh báo quan trọng!</h4>
                        <p>Bạn đang chuẩn bị xóa vĩnh viễn chỗ đỗ xe này. Hành động này không thể hoàn tác.</p>
                    </div>
                </div>
            </div>

            <!-- Delete Confirmation Card -->
            <div class="glass-card delete-card">
                <div class="card-header-danger">
                    <div class="d-flex align-items-center">
                        <div class="header-icon">
                            <i class="fas fa-exclamation-circle"></i>
                        </div>
                        <h3 class="mb-0">Xác nhận xóa chỗ đỗ xe</h3>
                    </div>
                </div>
                
                <div class="card-body p-4">
                    <!-- Parking Slot Information Display -->
                    <div class="slot-info-section mb-4">
                        <h5 class="section-title mb-3">
                            <i class="fas fa-info-circle me-2"></i>
                            Thông tin chỗ đỗ xe sẽ bị xóa
                        </h5>
                        <div class="row g-3">
                            <div class="col-md-4">
                                <div class="info-item slot-code">
                                    <div class="info-icon">
                                        <i class="fas fa-barcode"></i>
                                    </div>
                                    <div class="info-content">
                                        <div class="info-label">MÃ CHỖ ĐỖ XE</div>
                                        <div class="info-value">@Model.SlotCode</div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="info-item floor-info">
                                    <div class="info-icon">
                                        <i class="fas fa-layer-group"></i>
                                    </div>
                                    <div class="info-content">
                                        <div class="info-label">TẦNG</div>
                                        <div class="info-value">Tầng @Model.Floor</div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="info-item status-info">
                                    <div class="info-icon">
                                        <i class="fas fa-toggle-on"></i>
                                    </div>
                                    <div class="info-content">
                                        <div class="info-label">TRẠNG THÁI</div>
                                        <div class="info-value">
                                            @if (Model.IsAvailable)
                                            {
                                                <span class="status-badge available">Có sẵn</span>
                                            }
                                            else
                                            {
                                                <span class="status-badge occupied">Đã sử dụng</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Consequences Warning -->
                    <div class="consequences-section mb-4">
                        <div class="consequences-header">
                            <div class="danger-icon">
                                <i class="fas fa-exclamation-circle"></i>
                            </div>
                            <h5>Hệ quả của việc xóa chỗ đỗ xe này:</h5>
                        </div>
                        <div class="consequences-grid">
                            <div class="consequence-item">
                                <i class="fas fa-times-circle"></i>
                                <span>Chỗ đỗ xe sẽ bị xóa vĩnh viễn khỏi hệ thống</span>
                            </div>
                            <div class="consequence-item">
                                <i class="fas fa-times-circle"></i>
                                <span>Tất cả dữ liệu liên quan không thể khôi phục</span>
                            </div>
                            <div class="consequence-item">
                                <i class="fas fa-times-circle"></i>
                                <span>Các đặt chỗ hiện tại (nếu có) sẽ bị ảnh hưởng</span>
                            </div>
                            <div class="consequence-item">
                                <i class="fas fa-times-circle"></i>
                                <span>Báo cáo và thống kê sẽ được cập nhật</span>
                            </div>
                        </div>
                    </div>

                    <!-- Confirmation Form -->
                    <form asp-action="Delete" id="deleteForm" class="confirmation-form">
                        <input type="hidden" asp-for="Id" />

                        <!-- Confirmation Checkbox -->
                        <div class="confirmation-section mb-4">
                            <div class="confirmation-box">
                                <div class="custom-checkbox-container">
                                    <label class="custom-checkbox">
                                        <input type="checkbox" id="confirmDelete" required>
                                        <span class="checkmark"></span>
                                        <div class="checkbox-text">
                                            <i class="fas fa-shield-alt me-2"></i>
                                            Tôi hiểu rủi ro và xác nhận muốn xóa vĩnh viễn chỗ đỗ xe này
                                        </div>
                                    </label>
                                </div>
                                <div class="security-note">
                                    <i class="fas fa-lock me-2"></i>
                                    Để bảo mật, bạn phải xác nhận hành động này
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="action-section">
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <a asp-action="Index" class="btn btn-secondary-modern w-100">
                                        <i class="fas fa-shield me-2"></i>Hủy - An toàn
                                    </a>
                                </div>
                                <div class="col-md-4">
                                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info-modern w-100">
                                        <i class="fas fa-eye me-2"></i>Xem chi tiết
                                    </a>
                                </div>
                                <div class="col-md-4">
                                    <button type="submit" id="deleteButton" class="btn btn-danger-modern w-100" disabled>
                                        <i class="fas fa-trash-alt me-2"></i>Xóa vĩnh viễn
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modern White Theme Styles -->
<style>
    :root {
        --danger-color: #dc3545;
        --danger-light: #f8d7da;
        --danger-dark: #721c24;
        --warning-color: #fd7e14;
        --warning-light: #fff3cd;
        --primary-color: #0d6efd;
        --primary-light: #cce7ff;
        --success-color: #198754;
        --success-light: #d1e7dd;
        --secondary-color: #6c757d;
        --secondary-light: #e9ecef;
        --info-color: #0dcaf0;
        --info-light: #cff4fc;
        --white: #ffffff;
        --light-gray: #f8f9fa;
        --medium-gray: #dee2e6;
        --dark-gray: #495057;
        --shadow-sm: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        --shadow-md: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        --shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
        --border-radius: 12px;
        --border-radius-sm: 8px;
        --border-radius-lg: 16px;
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    body {
        background: var(--white);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        min-height: 100vh;
        color: var(--dark-gray);
    }

    .header-content {
        padding: 2rem 0;
        background: linear-gradient(135deg, var(--danger-color) 0%, var(--danger-dark) 100%);
        color: white;
        border-radius: var(--border-radius-lg);
        margin-bottom: 1rem;
        padding: 2rem;
        box-shadow: var(--shadow-lg);
    }

    .icon-wrapper.danger {
        width: 70px;
        height: 70px;
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        color: white;
        animation: pulse 2s infinite;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: white;
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: rgba(255, 255, 255, 0.9);
        font-size: 1.1rem;
        font-weight: 400;
    }

    .highlight-danger {
        background: white;
        color: var(--danger-color);
        padding: 4px 12px;
        border-radius: 6px;
        font-weight: 700;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .btn-outline-primary.btn-modern {
        background: white;
        border: 2px solid white;
        color: var(--danger-color);
        border-radius: var(--border-radius);
        padding: 12px 24px;
        font-weight: 600;
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
    }

    .btn-outline-primary.btn-modern:hover {
        background: var(--light-gray);
        transform: translateY(-2px);
        box-shadow: var(--shadow-md);
        color: var(--danger-dark);
    }

    .warning-alert {
        background: var(--warning-light);
        border: 2px solid var(--warning-color);
        border-radius: var(--border-radius-lg);
        padding: 2rem;
        animation: slideInFromTop 0.6s ease-out;
        box-shadow: var(--shadow-md);
    }

    .warning-content {
        display: flex;
        align-items: center;
        text-align: left;
    }

    .warning-icon-large {
        width: 80px;
        height: 80px;
        background: var(--warning-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 36px;
        color: white;
        margin-right: 2rem;
        animation: bounce 2s infinite;
        box-shadow: var(--shadow-md);
    }

    .warning-text h4 {
        color: var(--warning-color);
        font-weight: 700;
        margin-bottom: 0.5rem;
        font-size: 1.5rem;
    }

    .warning-text p {
        color: var(--dark-gray);
        margin: 0;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .glass-card.delete-card {
        background: var(--white);
        border: 1px solid var(--medium-gray);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-lg);
        overflow: hidden;
        animation: slideInFromBottom 0.8s ease-out;
    }

    .card-header-danger {
        background: linear-gradient(135deg, var(--danger-color) 0%, var(--danger-dark) 100%);
        color: white;
        padding: 1.5rem;
        border-bottom: none;
    }

    .header-icon {
        width: 50px;
        height: 50px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 24px;
        color: white;
        animation: rotate 3s linear infinite;
    }

    .section-title {
        color: var(--dark-gray);
        font-weight: 600;
        display: flex;
        align-items: center;
        font-size: 1.25rem;
    }

    .info-item {
        background: var(--white);
        border: 2px solid var(--medium-gray);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        text-align: center;
        transition: var(--transition);
        height: 100%;
        box-shadow: var(--shadow-sm);
    }

    .info-item:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-md);
        border-color: var(--primary-color);
    }

    .info-item.slot-code {
        border-color: var(--danger-color);
        background: var(--danger-light);
    }

    .info-item.floor-info {
        border-color: var(--info-color);
        background: var(--info-light);
    }

    .info-item.status-info {
        border-color: var(--warning-color);
        background: var(--warning-light);
    }

    .info-icon {
        width: 60px;
        height: 60px;
        background: var(--primary-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
        font-size: 24px;
        color: white;
        box-shadow: var(--shadow-sm);
        transition: var(--transition);
    }

    .slot-code .info-icon {
        background: var(--danger-color);
    }

    .floor-info .info-icon {
        background: var(--info-color);
    }

    .status-info .info-icon {
        background: var(--warning-color);
    }

    .info-label {
        color: var(--secondary-color);
        font-size: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.05em;
        margin-bottom: 0.5rem;
        text-transform: uppercase;
    }

    .info-value {
        color: var(--dark-gray);
        font-weight: 700;
        font-size: 1.2rem;
    }

    .status-badge {
        padding: 8px 20px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.875rem;
        box-shadow: var(--shadow-sm);
    }

    .status-badge.available {
        background: var(--success-color);
        color: white;
    }

    .status-badge.occupied {
        background: var(--secondary-color);
        color: white;
    }

    .consequences-section {
        background: var(--danger-light);
        border: 2px solid var(--danger-color);
        border-radius: var(--border-radius);
        padding: 2rem;
        box-shadow: var(--shadow-sm);
    }

    .consequences-header {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .danger-icon {
        width: 50px;
        height: 50px;
        background: var(--danger-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 20px;
        color: white;
        animation: pulse 1.5s infinite;
        box-shadow: var(--shadow-sm);
    }

    .consequences-header h5 {
        color: var(--danger-dark);
        font-weight: 600;
        margin: 0;
        font-size: 1.25rem;
    }

    .consequences-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
    }

    .consequence-item {
        display: flex;
        align-items: center;
        padding: 1rem;
        background: var(--white);
        border: 1px solid var(--danger-color);
        border-radius: var(--border-radius-sm);
        color: var(--dark-gray);
        font-weight: 500;
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
    }

    .consequence-item:hover {
        background: var(--light-gray);
        transform: translateX(5px);
        box-shadow: var(--shadow-md);
    }

    .consequence-item i {
        color: var(--danger-color);
        margin-right: 1rem;
        font-size: 1.2rem;
    }

    .confirmation-section {
        background: var(--light-gray);
        border: 2px solid var(--medium-gray);
        border-radius: var(--border-radius);
        padding: 2rem;
        box-shadow: var(--shadow-sm);
    }

    .confirmation-box {
        text-align: center;
    }

    .custom-checkbox-container {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
        padding: 2rem;
        background: var(--white);
        border-radius: var(--border-radius);
        border: 2px solid var(--medium-gray);
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
    }

    .custom-checkbox {
        display: flex;
        align-items: center;
        cursor: pointer;
        user-select: none;
        position: relative;
    }

    .custom-checkbox input[type="checkbox"] {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        height: 0;
        width: 0;
    }

    .checkmark {
        height: 28px;
        width: 28px;
        background-color: var(--white);
        border: 3px solid var(--medium-gray);
        border-radius: 8px;
        position: relative;
        transition: var(--transition);
        margin-right: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: var(--shadow-sm);
    }

    .custom-checkbox:hover .checkmark {
        border-color: var(--danger-color);
        transform: scale(1.05);
        box-shadow: 0 0 15px rgba(220, 53, 69, 0.2);
    }

    .custom-checkbox input:checked ~ .checkmark {
        background-color: var(--danger-color);
        border-color: var(--danger-color);
        animation: checkboxPulse 0.3s ease-in-out;
    }

    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
        left: 8px;
        top: 4px;
        width: 8px;
        height: 14px;
        border: solid white;
        border-width: 0 3px 3px 0;
        transform: rotate(45deg);
    }

    .custom-checkbox input:checked ~ .checkmark:after {
        display: block;
        animation: checkmarkSlide 0.3s ease-in-out;
    }

    .checkbox-text {
        color: var(--dark-gray);
        font-weight: 600;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        line-height: 1.4;
    }

    .checkbox-container {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
        padding: 1.5rem;
        background: var(--white);
        border-radius: var(--border-radius);
        border: 2px solid var(--medium-gray);
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
    }

    .form-check-input {
        width: 1.5rem;
        height: 1.5rem;
        background-color: var(--white);
        border: 2px solid var(--medium-gray);
        border-radius: 4px;
        margin-right: 1rem;
        transition: var(--transition);
    }

    .form-check-input:checked {
        background-color: var(--danger-color);
        border-color: var(--danger-color);
        background-image: none;
    }

    .form-check-input:checked::before {
        content: "✓";
        color: white;
        font-weight: bold;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
    }

    .form-check-label {
        color: var(--dark-gray);
        font-weight: 600;
        font-size: 1.1rem;
        cursor: pointer;
        display: flex;
        align-items: center;
    }

    .security-note {
        color: var(--secondary-color);
        font-size: 0.9rem;
        font-style: italic;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-secondary-modern {
        background: linear-gradient(135deg, var(--secondary-color) 0%, var(--dark-gray) 100%);
        border: none;
        border-radius: var(--border-radius);
        padding: 1rem 2rem;
        font-weight: 600;
        color: white;
        font-size: 1rem;
        transition: var(--transition);
        text-decoration: none;
        display: inline-block;
        text-align: center;
        box-shadow: var(--shadow-sm);
    }

    .btn-secondary-modern:hover {
        color: white;
        transform: translateY(-3px);
        box-shadow: var(--shadow-md);
    }

    .btn-info-modern {
        background: linear-gradient(135deg, var(--info-color) 0%, #0891b2 100%);
        border: none;
        border-radius: var(--border-radius);
        padding: 1rem 2rem;
        font-weight: 600;
        color: white;
        font-size: 1rem;
        transition: var(--transition);
        text-decoration: none;
        display: inline-block;
        text-align: center;
        box-shadow: var(--shadow-sm);
    }

    .btn-info-modern:hover {
        color: white;
        transform: translateY(-3px);
        box-shadow: var(--shadow-md);
    }

    .btn-danger-modern {
        background: linear-gradient(135deg, var(--danger-color) 0%, var(--danger-dark) 100%);
        border: none;
        border-radius: var(--border-radius);
        padding: 1rem 2rem;
        font-weight: 600;
        color: white;
        font-size: 1rem;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow-sm);
    }

    .btn-danger-modern:hover:not(:disabled) {
        transform: translateY(-3px);
        box-shadow: var(--shadow-md);
    }

    .btn-danger-modern:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        transform: none;
        background: var(--secondary-light);
        color: var(--secondary-color);
    }

    .btn-danger-modern:disabled:hover {
        transform: none;
        box-shadow: var(--shadow-sm);
    }

    /* Custom Checkbox Animations */
    @@keyframes checkboxPulse {
        0% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.1);
        }
        100% {
            transform: scale(1);
        }
    }

    @@keyframes checkmarkSlide {
        0% {
            opacity: 0;
            transform: rotate(45deg) scale(0);
        }
        50% {
            opacity: 1;
            transform: rotate(45deg) scale(1.2);
        }
        100% {
            opacity: 1;
            transform: rotate(45deg) scale(1);
        }
    }

    /* Animations */
    @@keyframes slideInFromTop {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideInFromBottom {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0%, 100% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.05);
        }
    }

    @@keyframes bounce {
        0%, 20%, 53%, 80%, 100% {
            transform: translate3d(0,0,0);
        }
        40%, 43% {
            transform: translate3d(0, -15px, 0);
        }
        70% {
            transform: translate3d(0, -7px, 0);
        }
        90% {
            transform: translate3d(0, -2px, 0);
        }
    }

    @@keyframes rotate {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .header-content {
            margin: 0 -15px;
            border-radius: 0;
        }
        
        .page-title {
            font-size: 1.8rem;
        }
        
        .warning-content {
            flex-direction: column;
            text-align: center;
        }
        
        .warning-icon-large {
            margin-right: 0;
            margin-bottom: 1rem;
        }
        
        .consequences-grid {
            grid-template-columns: 1fr;
        }
        
        .checkbox-container {
            flex-direction: column;
            text-align: center;
        }
        
        .form-check-input {
            margin-right: 0;
            margin-bottom: 1rem;
        }
        
        .action-section .col-md-4 {
            margin-bottom: 0.5rem;
        }
    }

    /* Print Styles */
    @@media print {
        .warning-alert,
        .glass-card {
            break-inside: avoid;
        }
        
        .btn-modern {
            display: none;
        }
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const confirmCheckbox = document.getElementById('confirmDelete');
            const deleteButton = document.getElementById('deleteButton');
            const deleteForm = document.getElementById('deleteForm');

            // Enable/disable delete button based on checkbox
            confirmCheckbox.addEventListener('change', function() {
                deleteButton.disabled = !this.checked;
                
                if (this.checked) {
                    deleteButton.style.animation = 'pulse 1s infinite';
                } else {
                    deleteButton.style.animation = 'none';
                }
            });

            // Form submission with multiple confirmations
            deleteForm.addEventListener('submit', function(e) {
                e.preventDefault();

                // First confirmation
                if (!confirm('⚠️ CẢNH BÁO: Bạn có chắc chắn muốn xóa chỗ đỗ xe "' + '@Model.SlotCode' + '" không?\n\n🚨 Hành động này KHÔNG THỂ HOÀN TÁC!')) {
                    confirmCheckbox.checked = false;
                    deleteButton.disabled = true;
                    deleteButton.style.animation = 'none';
                    return;
                }

                // Second confirmation with more dramatic warning
                if (!confirm('🔥 CẢNH BÁO NGHIÊM TRỌNG 🔥\n\n' + 
                           '❌ Xóa vĩnh viễn chỗ đỗ xe: ' + '@Model.SlotCode' + '\n' +
                           '❌ Tầng: @Model.Floor\n' +
                           '❌ Trạng thái: @(Model.IsAvailable ? "Có sẵn" : "Đã sử dụng")\n\n' +
                           '💀 KHÔNG THỂ KHÔI PHỤC SAU KHI XÓA!\n\n' +
                           'Nhấn OK để XÓA VĨNH VIỄN hoặc Cancel để HỦY BỎ')) {
                    confirmCheckbox.checked = false;
                    deleteButton.disabled = true;
                    deleteButton.style.animation = 'none';
                    return;
                }

                // Final dramatic countdown confirmation
                let countdown = 3;
                const countdownInterval = setInterval(() => {
                    if (countdown > 0) {
                        deleteButton.innerHTML = `<i class="fas fa-clock me-2"></i>Đang xóa trong ${countdown}s...`;
                        countdown--;
                    } else {
                        clearInterval(countdownInterval);
                        
                        // Change button state
                        deleteButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xóa vĩnh viễn...';
                        deleteButton.disabled = true;
                        deleteButton.style.animation = 'none';
                        deleteButton.style.background = 'linear-gradient(135deg, #6c757d 0%, #495057 100%)';

                        // Add destruction effect to the card
                        const card = document.querySelector('.glass-card');
                        card.style.transition = 'all 1s ease-out';
                        card.style.transform = 'scale(0.98)';
                        card.style.opacity = '0.8';

                        // Submit the form after dramatic pause
                        setTimeout(() => {
                            this.submit();
                        }, 1000);
                    }
                }, 1000);
            });

            // Add hover effects to info items
            const infoItems = document.querySelectorAll('.info-item');
            infoItems.forEach(item => {
                item.addEventListener('mouseenter', function() {
                    const icon = this.querySelector('.info-icon');
                    if (icon) {
                        icon.style.transform = 'scale(1.1) rotate(10deg)';
                    }
                });
                
                item.addEventListener('mouseleave', function() {
                    const icon = this.querySelector('.info-icon');
                    if (icon) {
                        icon.style.transform = 'scale(1) rotate(0deg)';
                    }
                });
            });

            // Checkbox animation
            confirmCheckbox.addEventListener('change', function() {
                const container = this.closest('.custom-checkbox-container');
                if (this.checked) {
                    container.style.borderColor = 'var(--danger-color)';
                    container.style.background = 'var(--danger-light)';
                    container.style.transform = 'scale(1.02)';
                    container.style.boxShadow = '0 0 20px rgba(220, 53, 69, 0.2)';
                } else {
                    container.style.borderColor = 'var(--medium-gray)';
                    container.style.background = 'var(--white)';
                    container.style.transform = 'scale(1)';
                    container.style.boxShadow = 'var(--shadow-sm)';
                }
            });

            // Add floating effect to warning alert
            const warningAlert = document.querySelector('.warning-alert');
            if (warningAlert) {
                setInterval(() => {
                    warningAlert.style.transform = 'translateY(-2px)';
                    setTimeout(() => {
                        warningAlert.style.transform = 'translateY(0px)';
                    }, 1000);
                }, 3000);
            }

            // Add subtle background animations
            const dangerIcon = document.querySelector('.danger-icon');
            if (dangerIcon) {
                setInterval(() => {
                    dangerIcon.style.boxShadow = '0 0 20px rgba(220, 53, 69, 0.5)';
                    setTimeout(() => {
                        dangerIcon.style.boxShadow = 'var(--shadow-sm)';
                    }, 500);
                }, 2000);
            }

            // Add progress indication when hovering delete button
            deleteButton.addEventListener('mouseenter', function() {
                if (!this.disabled) {
                    this.style.boxShadow = '0 0 25px rgba(220, 53, 69, 0.4)';
                }
            });

            deleteButton.addEventListener('mouseleave', function() {
                if (!this.disabled) {
                    this.style.boxShadow = 'var(--shadow-sm)';
                }
            });

            // Add typing effect to consequence items
            const consequenceItems = document.querySelectorAll('.consequence-item');
            consequenceItems.forEach((item, index) => {
                item.style.opacity = '0';
                item.style.transform = 'translateX(-20px)';
                
                setTimeout(() => {
                    item.style.transition = 'all 0.5s ease-out';
                    item.style.opacity = '1';
                    item.style.transform = 'translateX(0)';
                }, (index + 1) * 200);
            });

            // Add smooth scroll behavior for better UX
            document.documentElement.style.scrollBehavior = 'smooth';

            // Enhanced form validation
            deleteForm.addEventListener('input', function() {
                const isValid = confirmCheckbox.checked;
                deleteButton.disabled = !isValid;
                
                if (isValid) {
                    deleteButton.classList.add('ready-to-delete');
                    deleteButton.style.background = 'linear-gradient(135deg, var(--danger-color) 0%, var(--danger-dark) 100%)';
                } else {
                    deleteButton.classList.remove('ready-to-delete');
                    deleteButton.style.background = 'var(--secondary-light)';
                }
            });
        });

        // Add additional safety measures
        window.addEventListener('beforeunload', function(e) {
            const checkbox = document.getElementById('confirmDelete');
            if (checkbox && checkbox.checked) {
                e.preventDefault();
                e.returnValue = 'Bạn có chắc chắn muốn rời khỏi trang này không? Thao tác xóa chưa hoàn thành.';
            }
        });

        // Prevent accidental form submission
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && e.target.type !== 'submit') {
                e.preventDefault();
            }
        });
    </script>
}
